openapi: 3.0.3
info:
  title: Student Fee Management System API
  version: 1.0.0
  description: API documentation for Student Fee Management System

servers:
  - url: http://localhost:3000

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        feesPaid:
          type: boolean
      required:
        - _id
        - name
        - email
        - feesPaid

paths:
  /api/auth/signup:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "400":
          description: User already exists
        "500":
          description: Server error

  /api/auth/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Invalid credentials
        "500":
          description: Server error

  /api/auth/verify:
    get:
      summary: Verify JWT token and get user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Invalid token
        "404":
          description: User not found

  /api/students:
    get:
      summary: Get all students
      responses:
        "200":
          description: List of students
          content:
            application/json:
              schema:
                type: object
                properties:
                  students:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "500":
          description: Server error

  /api/profile:
    put:
      summary: Update user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              required:
                - name
                - email
      responses:
        "200":
          description: Profile updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: No token provided
        "500":
          description: Server error

  /api/payment:
    post:
      summary: Pay fees
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                paymentMethod:
                  type: string
              required:
                - amount
                - paymentMethod
      responses:
        "200":
          description: Payment successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    $ref: "#/components/schemas/User"
                  transactionId:
                    type: string
        "400":
          description: Payment failed
        "401":
          description: No token provided
        "500":
          description: Payment processing error
